# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Publish to Nexus OSSRH

# Condition to run the workflow
on:
  release:
    types: [ created ]

jobs:
  build:

    runs-on: ubuntu-latest # The type of operating system that the following commands run on
    permissions:
      contents: read
      packages: write

    steps:
      # Shows your private key
      - name: GPG configuration
        run: |
          export GPG_TTY=$(tty)
          gpg --list-secret-keys --keyid-format LONG

      - name: Install secret key and Create file secring.gpg
        run: |
          cat <(echo -e "${{ secrets.GPG_PRIVATE_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format SHORT
          chmod -R 777 ~/.gnupg
          
          export GPG_TTY=$(tty) 
          gpg --batch --export-secret-keys --pinentry-mode=loopback --passphrase ${{ secrets.GPG_SECRET_KEY_PASSWORD }} -o ~/.gnupg/secring.gpg
          ls -lh ~/.gnupg/secring.gpg

      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
        with:
          gradle-version: '8.5'

      - name: Build with Gradle (silent)
        run: gradle build --quiet
        continue-on-error: true

      - name: Build and publish to Apache Maven Central Spring rules
        # Commands to build only spring rules
        run: |
          gradle build -x test
          export GPG_TTY=$(tty) && gradle -Psigning.keyId=${{ secrets.GPG_SHORT_KEY }} -Psigning.secretKeyRingFile=/home/runner/.gnupg/secring.gpg -Psigning.password=${GPG_KEY_PASSPHRASE} :publishLibraryPublicationToOSSRHRepository -x test
        env:
          GPG_KEY_PASSPHRASE: ${{ secrets.GPG_SECRET_KEY_PASSWORD }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
